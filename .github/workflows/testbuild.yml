name: Test build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ['14', '16', '18', '19']
        webpack-version: ['4', '5']
        include:
          - webpack-version: 5
            webpack-cli-version: 4
          - webpack-version: 4
            webpack-cli-version: 3

    env:
      WEBPACK_VERSION: ${{ matrix.webpack-version }}
      WEBPACK_CLI_VERSION: ${{ matrix.webpack-cli-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node v${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node modules
        run: npm ci

      - name: Install webpack specific dependencies
        run: npm install webpack@$WEBPACK_VERSION webpack-cli@$WEBPACK_CLI_VERSION

      - name: Test Webpack build
        run: |
          npm test
        if: matrix.node != '19' || matrix.webpack-version != '4' || matrix.os != 'windows-latest'

      - name: Test Webpack build (Node.js v19 and Webpack v4)
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm test
        if: matrix.node == '19' && matrix.webpack-version == '4' && matrix.os != 'windows-latest'
        # https://github.com/webpack/webpack/issues/14532 ðŸ™„

      - name: Test Webpack build (Node.js v19, Webpack v4, and Windows)
        run: |
          $Env:NODE_OPTIONS = "--openssl-legacy-provider"
          npm test
        if: matrix.node == '19' && matrix.webpack-version == '4' && matrix.os == 'windows-latest'
        # https://github.com/webpack/webpack/issues/14532 ðŸ™„

      - name: Upload the bundle
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ format('bundle-{0}-{1}.js', matrix.node-version, runner.os) }}
          path: public/bundle.js
